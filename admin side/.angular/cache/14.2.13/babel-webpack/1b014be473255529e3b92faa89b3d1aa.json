{"ast":null,"code":"import { ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { jwtDecode } from 'jwt-decode';\nimport { PageStatusService } from '../service/PageStatusService';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/PageStatusService\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(router, pageStatusService) {\n      this.router = router;\n      this.pageStatusService = pageStatusService;\n    }\n\n    canActivate(route, state) {\n      const token = sessionStorage.getItem('authToken');\n\n      if (token) {\n        try {\n          const decodedToken = jwtDecode(token);\n          const roles = decodedToken?.resource_access?.['recipe-app-client']?.roles || [];\n\n          if (roles.includes('ADMIN')) {\n            return true;\n          } else {\n            this.pageStatusService.setUnauthorizedStatus(true);\n            this.router.navigate(['/unauthorized']);\n            return false;\n          }\n        } catch (err) {\n          console.error('Error decoding token:', err);\n          this.router.navigate(['/login']);\n          return false;\n        }\n      }\n\n      this.pageStatusService.setUnauthorizedStatus(true);\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.PageStatusService));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}