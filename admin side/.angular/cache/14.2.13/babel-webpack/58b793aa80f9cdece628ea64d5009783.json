{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction RecipeComponent_tr_30_img_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 19);\n  }\n\n  if (rf & 2) {\n    const recipe_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r5.imageUrls[recipe_r4.id], i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction RecipeComponent_tr_30_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"No Image\");\n  }\n}\n\nfunction RecipeComponent_tr_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtemplate(16, RecipeComponent_tr_30_img_16_Template, 1, 1, \"img\", 13);\n    i0.ɵɵtemplate(17, RecipeComponent_tr_30_ng_template_17_Template, 1, 0, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\")(20, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function RecipeComponent_tr_30_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const recipe_r4 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n\n      const _r2 = i0.ɵɵreference(33);\n\n      return i0.ɵɵresetView(ctx_r9.openRecipeModal(_r2, recipe_r4));\n    });\n    i0.ɵɵelement(21, \"i\", 16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"td\")(23, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function RecipeComponent_tr_30_Template_button_click_23_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const recipe_r4 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.deleteRecipe(recipe_r4.id));\n    });\n    i0.ɵɵelement(24, \"i\", 18);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const recipe_r4 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(recipe_r4.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(recipe_r4.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(recipe_r4.categoryName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(recipe_r4.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(recipe_r4.ingredients);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(recipe_r4.cookingTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(recipe_r4.dietaryPreferences);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.imageUrls[recipe_r4.id]);\n  }\n}\n\nfunction RecipeComponent_p_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 20);\n    i0.ɵɵtext(1, \"No recipes available.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RecipeComponent_ng_template_32_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r15.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(c_r15.name);\n  }\n}\n\nfunction RecipeComponent_ng_template_32_option_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const d_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", d_r16.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(d_r16.name);\n  }\n}\n\nfunction RecipeComponent_ng_template_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"h4\", 22);\n    i0.ɵɵtext(2, \"Update Recipe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function RecipeComponent_ng_template_32_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const modal_r12 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(modal_r12.dismiss());\n    });\n    i0.ɵɵelementStart(4, \"span\", 24);\n    i0.ɵɵtext(5, \"\\u00D7\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"div\", 25)(7, \"form\")(8, \"div\", 26)(9, \"label\", 27);\n    i0.ɵɵtext(10, \"Recipe Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"input\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function RecipeComponent_ng_template_32_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.recipe.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 26)(13, \"label\", 29);\n    i0.ɵɵtext(14, \"Category\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"select\", 30);\n    i0.ɵɵlistener(\"ngModelChange\", function RecipeComponent_ng_template_32_Template_select_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.recipe.categoryName = $event);\n    });\n    i0.ɵɵtemplate(16, RecipeComponent_ng_template_32_option_16_Template, 2, 2, \"option\", 31);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 26)(18, \"label\", 32);\n    i0.ɵɵtext(19, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"textarea\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function RecipeComponent_ng_template_32_Template_textarea_ngModelChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.recipe.description = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"div\", 26)(22, \"label\", 34);\n    i0.ɵɵtext(23, \"Ingredients\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"textarea\", 35);\n    i0.ɵɵlistener(\"ngModelChange\", function RecipeComponent_ng_template_32_Template_textarea_ngModelChange_24_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.recipe.ingredients = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"div\", 26)(26, \"label\", 36);\n    i0.ɵɵtext(27, \"Cooking Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"input\", 37);\n    i0.ɵɵlistener(\"ngModelChange\", function RecipeComponent_ng_template_32_Template_input_ngModelChange_28_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.recipe.cookingTime = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"div\", 26)(30, \"label\", 38);\n    i0.ɵɵtext(31, \"Dietary Preference\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"select\", 39);\n    i0.ɵɵlistener(\"ngModelChange\", function RecipeComponent_ng_template_32_Template_select_ngModelChange_32_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.recipe.dietaryPreferences = $event);\n    });\n    i0.ɵɵtemplate(33, RecipeComponent_ng_template_32_option_33_Template, 2, 2, \"option\", 31);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(34, \"div\", 40)(35, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function RecipeComponent_ng_template_32_Template_button_click_35_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const modal_r12 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(modal_r12.dismiss());\n    });\n    i0.ɵɵtext(36, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"button\", 42);\n    i0.ɵɵlistener(\"click\", function RecipeComponent_ng_template_32_Template_button_click_37_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const modal_r12 = restoredCtx.$implicit;\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.updateRecipe(modal_r12));\n    });\n    i0.ɵɵtext(38, \"Update\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.recipe.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.recipe.categoryName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.categories);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.recipe.description);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.recipe.ingredients);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.recipe.cookingTime);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.recipe.dietaryPreferences);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.dietaryPreferences);\n  }\n}\n\nexport let RecipeComponent = /*#__PURE__*/(() => {\n  class RecipeComponent {\n    constructor(http, router, modalService) {\n      this.http = http;\n      this.router = router;\n      this.modalService = modalService;\n      this.recipes = [];\n      this.categories = [];\n      this.dietaryPreferences = [];\n      this.selectedRecipeId = null;\n      this.recipe = {\n        id: null,\n        name: '',\n        category: '',\n        imageId: '',\n        description: '',\n        cookingTime: '',\n        ingredients: '',\n        dietaryPreferences: ''\n      };\n      this.imageUrls = {};\n      this.selectedImageFile = null;\n    }\n\n    ngOnInit() {\n      this.getRecipes();\n      this.fetchCategories();\n      this.fetchDietaryPreferences();\n      this.getAllImages(); // this.loadImageh(452);\n    } // loadImageh(imageId: number): void {\n    //   const token = sessionStorage.getItem('token'); // adjust if stored elsewhere\n    //   const headers = new HttpHeaders({\n    //     Authorization: `Bearer ${token}`,\n    //   });\n    //   this.http.post(`http://localhost:8000/recipe-sharing-platform/api/get-images/${imageId}`, {}, {\n    //     headers: headers,\n    //     responseType: 'blob'\n    //   }).subscribe(blob => {\n    //     const imageUrl = URL.createObjectURL(blob);\n    //     this.imageUrls[imageId] = imageUrl;\n    //   }, error => {\n    //     console.error('Failed to load image', error);\n    //   });\n    // }\n\n\n    getRecipes() {\n      const token = sessionStorage.getItem('authToken');\n      if (!token) return this.router.navigate(['/login']);\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      this.http.post('http://localhost:8000/recipe-sharing-platform/api/get-recipe', {}, {\n        headers\n      }).subscribe(response => {\n        if (response.success) {\n          this.recipes = response.result;\n          this.recipes.forEach(recipe => {\n            if (recipe.imageId) {\n              this.loadImage(recipe.id, recipe.imageId);\n            }\n          });\n        }\n      });\n    }\n\n    getAllImages() {\n      const token = sessionStorage.getItem('authToken');\n      if (!token) return;\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      this.http.post('http://localhost:8000/recipe-sharing-platform/api/get-all-images', {}, {\n        headers\n      }).subscribe(images => {\n        console.log('Images received:', images); // Check if images are received\n\n        if (!Array.isArray(images)) return;\n        images.forEach(img => {\n          const recipeId = parseInt(img.recipeId, 10);\n          const imageId = img.id;\n\n          if (recipeId) {\n            console.log('Loading image for recipeId:', recipeId, 'with imageId:', imageId); // Log image loading attempt\n\n            this.loadImage(recipeId, imageId);\n          }\n        });\n      });\n    } // loadImage(recipeId: number, imageId: number) {\n    //   console.log('Fetching image for imageId:', imageId);  // Log before calling API\n    //   const token = sessionStorage.getItem('authToken');\n    //   if (!token) return;\n    //   const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    //   this.http.post(`http://localhost:8000/recipe-sharing-platform/api/get-images/${imageId}`, {}, {\n    //     headers: headers,\n    //     responseType: 'blob'\n    //   }).subscribe(blob => {\n    //     const reader = new FileReader();\n    //     reader.readAsDataURL(blob);\n    //     reader.onloadend = () => {\n    //       const base64data = reader.result as string;\n    //       this.imageUrls[imageId] = base64data;\n    //     };\n    //   });    \n    // }\n\n\n    loadImage(recipeId, imageId) {\n      const token = sessionStorage.getItem('authToken');\n      if (!token) return;\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      this.http.post(`http://localhost:8000/recipe-sharing-platform/api/get-images/${imageId}`, {}, {\n        headers,\n        responseType: 'blob'\n      }).subscribe(blob => {\n        const reader = new FileReader();\n        reader.readAsDataURL(blob);\n\n        reader.onloadend = () => {\n          const base64data = reader.result; // 👇 FIX: Save the image based on recipeId not imageId\n\n          if (!this.imageUrls[recipeId]) {\n            this.imageUrls[recipeId] = base64data;\n          }\n        };\n      }, err => {\n        console.warn(`Could not load image for recipeId=${recipeId}, imageId=${imageId}`, err);\n      });\n    }\n\n    fetchCategories() {\n      const token = sessionStorage.getItem('authToken');\n      if (!token) return this.router.navigate(['/login']);\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      this.http.post('http://localhost:8000/recipe-sharing-platform/api/get-category', {}, {\n        headers\n      }).subscribe(response => {\n        if (response.success) this.categories = response.result.filter(c => c.name);\n      });\n    }\n\n    fetchDietaryPreferences() {\n      const token = sessionStorage.getItem('authToken');\n      if (!token) return this.router.navigate(['/login']);\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      this.http.post('http://localhost:8000/recipe-sharing-platform/api/get-dietary', {}, {\n        headers\n      }).subscribe(response => {\n        if (response.success) this.dietaryPreferences = response.result.filter(d => d.name);\n      });\n    }\n\n    openRecipeModal(content, recipe) {\n      this.selectedRecipeId = recipe.id;\n      this.recipe = { ...recipe\n      };\n      this.modalService.open(content, {\n        centered: true,\n        size: 'lg'\n      });\n    }\n\n    onImageSelected(event) {\n      if (event.target.files && event.target.files.length > 0) {\n        this.selectedImageFile = event.target.files[0];\n      }\n    }\n\n    updateRecipe(modal) {\n      const token = sessionStorage.getItem('authToken');\n      if (!token || !this.selectedRecipeId) return this.router.navigate(['/login']);\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n      if (this.selectedImageFile) {\n        const formData = new FormData();\n        formData.append('image', this.selectedImageFile);\n        this.http.post('http://localhost:8000/recipe-sharing-platform/api/upload-image', formData, {\n          headers\n        }).subscribe(response => {\n          if (response.success && response.imageId) {\n            this.recipe.imageId = response.imageId;\n            this.proceedWithUpdate(modal, headers);\n          }\n        });\n      } else {\n        this.proceedWithUpdate(modal, headers);\n      }\n    }\n\n    proceedWithUpdate(modal, headers) {\n      const updatedRecipe = {\n        name: this.recipe.name,\n        category: this.recipe.category,\n        imageId: this.recipe.imageId || '',\n        description: this.recipe.description,\n        cookingTime: this.recipe.cookingTime,\n        ingredients: this.recipe.ingredients,\n        dietaryPreferences: this.recipe.dietaryPreferences\n      };\n      this.http.post(`http://localhost:8000/recipe-sharing-platform/api/update-recipe/${this.selectedRecipeId}`, updatedRecipe, {\n        headers\n      }).subscribe(response => {\n        if (response.success) {\n          this.getRecipes();\n          modal.dismiss();\n        }\n      });\n    }\n\n    deleteRecipe(recipeId) {\n      const token = sessionStorage.getItem('authToken');\n      if (!token) return this.router.navigate(['/login']);\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      this.http.post(`http://localhost:8000/recipe-sharing-platform/api/delete-recipe/${recipeId}`, {}, {\n        headers\n      }).subscribe(response => {\n        if (response.success) this.getRecipes();\n      });\n    }\n\n  }\n\n  RecipeComponent.ɵfac = function RecipeComponent_Factory(t) {\n    return new (t || RecipeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.NgbModal));\n  };\n\n  RecipeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecipeComponent,\n    selectors: [[\"recipe-cmp\"]],\n    decls: 34,\n    vars: 2,\n    consts: [[1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [1, \"table-responsive\"], [1, \"table\"], [1, \"text-primary\"], [\"colspan\", \"2\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-warning\", 4, \"ngIf\"], [\"modalContent\", \"\"], [\"class\", \"img-fluid\", \"alt\", \"Recipe Image\", 3, \"src\", 4, \"ngIf\"], [\"noImg\", \"\"], [1, \"btn\", \"btn-success\", \"btn-fab\", \"btn-icon\", \"btn-round\", 3, \"click\"], [1, \"nc-icon\", \"nc-minimal-up\"], [1, \"btn\", \"btn-danger\", \"btn-fab\", \"btn-icon\", \"btn-round\", 3, \"click\"], [1, \"nc-icon\", \"nc-simple-remove\"], [\"alt\", \"Recipe Image\", 1, \"img-fluid\", 3, \"src\"], [1, \"text-warning\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"category\"], [\"name\", \"category\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"description\"], [\"id\", \"description\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"ingredients\"], [\"id\", \"ingredients\", \"name\", \"ingredients\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"cookingTime\"], [\"type\", \"text\", \"id\", \"cookingTime\", \"name\", \"cookingTime\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dietaryPreferences\"], [\"name\", \"dietaryPreferences\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"value\"]],\n    template: function RecipeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h4\", 4);\n        i0.ɵɵtext(5, \"View Recipe\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"table\", 7)(9, \"thead\", 8)(10, \"tr\")(11, \"th\");\n        i0.ɵɵtext(12, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\");\n        i0.ɵɵtext(16, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\");\n        i0.ɵɵtext(20, \"Ingredients\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"th\");\n        i0.ɵɵtext(22, \"Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"th\");\n        i0.ɵɵtext(24, \"Diet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"th\");\n        i0.ɵɵtext(26, \"Image\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"th\", 9);\n        i0.ɵɵtext(28, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(29, \"tbody\");\n        i0.ɵɵtemplate(30, RecipeComponent_tr_30_Template, 25, 8, \"tr\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(31, RecipeComponent_p_31_Template, 2, 0, \"p\", 11);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(32, RecipeComponent_ng_template_32_Template, 39, 8, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(30);\n        i0.ɵɵproperty(\"ngForOf\", ctx.recipes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.recipes.length === 0);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n    encapsulation: 2\n  });\n  return RecipeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}