{"ast":null,"code":"import _asyncToGenerator from \"D:/Amara/Freelance Project/Project 4 Recepie Sharing Platform/Frondend/admin side/admin side/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction ImageComponent_div_6_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelement(6, \"img\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ImageComponent_div_6_tr_14_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const image_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.deleteImage(image_r3.id));\n    });\n    i0.ɵɵelement(9, \"i\", 14);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const image_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(image_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.getRecipeName(image_r3.recipeId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", image_r3.base64Image, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction ImageComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"table\", 9)(3, \"thead\", 10)(4, \"tr\")(5, \"th\");\n    i0.ɵɵtext(6, \"Image ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Recipe Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, ImageComponent_div_6_tr_14_Template, 10, 3, \"tr\", 11);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.images);\n  }\n}\n\nfunction ImageComponent_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 15);\n    i0.ɵɵtext(1, \" No images available. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ImageComponent = /*#__PURE__*/(() => {\n  class ImageComponent {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.recipes = [];\n      this.images = [];\n      this.filteredImages = [];\n      this.selectedRecipeId = null;\n      this.selectedRecipeName = '';\n    }\n\n    ngOnInit() {\n      this.fetchRecipes();\n      this.fetchImages();\n    }\n\n    fetchRecipes() {\n      const token = sessionStorage.getItem('authToken');\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      this.http.post('http://localhost:8000/recipe-sharing-platform/api/get-recipe', {}, {\n        headers\n      }).subscribe(response => {\n        if (response.success) {\n          this.recipes = response.result;\n        }\n      });\n    }\n\n    fetchImages() {\n      var _this = this;\n\n      const token = sessionStorage.getItem('authToken');\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      this.http.post('http://localhost:8000/recipe-sharing-platform/api/get-all-images', {}, {\n        headers\n      }).subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (response) {\n          // response = [{ id: 1, recipeId: 10 }, ...]\n          const imageList = yield Promise.all(response.map( /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator(function* (img) {\n              const blob = yield _this.fetchImageBlob(img.id, headers);\n              const base64 = yield _this.blobToBase64(blob);\n              return {\n                id: img.id,\n                recipeId: img.recipeId,\n                base64Image: base64\n              };\n            });\n\n            return function (_x2) {\n              return _ref2.apply(this, arguments);\n            };\n          }()));\n          _this.images = imageList;\n\n          _this.filterImages();\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n\n    fetchImageBlob(imageId, headers) {\n      const url = `http://localhost:8000/recipe-sharing-platform/api/get-images/${imageId}`;\n      return this.http.post(url, {}, {\n        headers,\n        responseType: 'blob'\n      }).toPromise();\n    }\n\n    blobToBase64(blob) {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(blob);\n\n        reader.onloadend = () => resolve(reader.result);\n\n        reader.onerror = reject;\n      });\n    } // For selecting recipe\n\n\n    selectRecipe(recipe) {\n      this.selectedRecipeId = recipe.id;\n      this.selectedRecipeName = recipe.name;\n      this.filterImages();\n    } // Filtering images based on selected recipe\n\n\n    filterImages() {\n      if (this.selectedRecipeId) {\n        this.filteredImages = this.images.filter(img => img.recipeId == this.selectedRecipeId);\n      } else {\n        this.filteredImages = this.images;\n      }\n    }\n\n    getRecipeName(recipeId) {\n      const recipe = this.recipes.find(r => r.id == recipeId);\n      return recipe ? recipe.name : 'Unknown';\n    }\n\n    getImageUrl(fileName) {\n      // Replace with your actual backend logic if you serve images\n      return `http://localhost:8000/recipe-sharing-platform/uploads/images/${fileName}`;\n    }\n\n    deleteImage(imageId) {\n      const token = sessionStorage.getItem('authToken');\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      this.http.post(`http://localhost:8000/recipe-sharing-platform/api/delete-recipe/${imageId}`, {}, {\n        headers\n      }).subscribe(response => {\n        if (response.success) {\n          alert('Image deleted successfully!');\n          this.fetchImages(); // Refresh list\n        } else {\n          alert('Failed to delete image');\n        }\n      });\n    }\n\n  }\n\n  ImageComponent.ɵfac = function ImageComponent_Factory(t) {\n    return new (t || ImageComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  ImageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ImageComponent,\n    selectors: [[\"image-cmp\"]],\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [\"class\", \"card-body\", 4, \"ngIf\"], [\"class\", \"text-warning text-center mt-3\", 4, \"ngIf\"], [1, \"card-body\"], [1, \"table-responsive\"], [1, \"table\"], [1, \"text-primary\"], [4, \"ngFor\", \"ngForOf\"], [\"alt\", \"Image\", \"width\", \"80\", \"height\", \"80\", 3, \"src\"], [1, \"btn\", \"btn-danger\", \"btn-fab\", \"btn-icon\", \"btn-round\", 3, \"click\"], [1, \"nc-icon\", \"nc-simple-remove\"], [1, \"text-warning\", \"text-center\", \"mt-3\"]],\n    template: function ImageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h4\", 4);\n        i0.ɵɵtext(5, \"View Images\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(6, ImageComponent_div_6_Template, 15, 1, \"div\", 5);\n        i0.ɵɵtemplate(7, ImageComponent_p_7_Template, 2, 0, \"p\", 6);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.images.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.images.length === 0);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf],\n    encapsulation: 2\n  });\n  return ImageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}