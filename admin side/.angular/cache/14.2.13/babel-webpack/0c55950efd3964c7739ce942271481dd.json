{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@ng-bootstrap/ng-bootstrap\";\n\nfunction CommentComponent_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function CommentComponent_button_10_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const recipe_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.selectRecipe(recipe_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const recipe_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", recipe_r3.name, \" \");\n  }\n}\n\nfunction CommentComponent_div_11_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function CommentComponent_div_11_tr_14_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const comment_r8 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.deleteComment(comment_r8.id));\n    });\n    i0.ɵɵelement(9, \"i\", 20);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const comment_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r8.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r8.comment);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r8.createdAt);\n  }\n}\n\nfunction CommentComponent_div_11_p_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 21);\n    i0.ɵɵtext(1, \"No comments available.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CommentComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13)(2, \"table\", 14)(3, \"thead\", 15)(4, \"tr\")(5, \"th\");\n    i0.ɵɵtext(6, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Comment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Created At\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Actions \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, CommentComponent_div_11_tr_14_Template, 10, 3, \"tr\", 16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 17);\n    i0.ɵɵtemplate(16, CommentComponent_div_11_p_16_Template, 2, 0, \"p\", 18);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.comments);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.comments.length === 0);\n  }\n}\n\nfunction CommentComponent_p_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 22);\n    i0.ɵɵtext(1, \" No comments found for this recipe. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let CommentComponent = /*#__PURE__*/(() => {\n  class CommentComponent {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.recipes = [];\n      this.selectedRecipeId = null;\n      this.comments = [];\n      this.selectedRecipeName = '';\n    }\n\n    ngOnInit() {\n      this.fetchRecipes();\n    } // Fetch the list of recipes for the dropdown\n\n\n    fetchRecipes() {\n      const token = sessionStorage.getItem('authToken');\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      this.http.post('http://localhost:8000/recipe-sharing-platform/api/get-recipe', {}, {\n        headers\n      }).subscribe(response => {\n        if (response.success) {\n          this.recipes = response.result;\n        }\n      }, error => {\n        console.error('Error fetching recipes:', error);\n      });\n    } // Select a recipe from the dropdown\n\n\n    selectRecipe(recipe) {\n      this.selectedRecipeId = recipe.id;\n      this.selectedRecipeName = recipe.name;\n      this.fetchComments();\n    } // Fetch comments based on the selected recipe\n\n\n    fetchComments() {\n      if (!this.selectedRecipeId) return;\n      const token = sessionStorage.getItem('authToken');\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      this.http.post(`http://localhost:8000/recipe-sharing-platform/api/get-comment/${this.selectedRecipeId}`, {}, {\n        headers\n      }).subscribe(response => {\n        if (response.success) {\n          this.comments = response.result;\n        } else {\n          this.comments = [];\n        }\n      }, error => {\n        console.error('Error fetching comments:', error);\n      });\n    } //Delete Collection API call\n\n\n    deleteComment(commentId) {\n      const token = sessionStorage.getItem('authToken');\n\n      if (!token) {\n        this.router.navigate(['/login']);\n        console.error(\"No token found!\");\n        return;\n      }\n\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      console.log(token);\n      this.http.post(`http://localhost:8000/recipe-sharing-platform/api/delete-comment/${commentId}`, {}, {\n        headers\n      }).subscribe(response => {\n        if (response.success) {\n          console.log('Comment deleted successfully');\n          this.fetchComments(); // Refresh the list after deletion\n        } else {\n          console.error('Error deleting comment:', response.message);\n        }\n      }, error => {\n        console.error('Error deleting comment:', error);\n      });\n    }\n\n  }\n\n  CommentComponent.ɵfac = function CommentComponent_Factory(t) {\n    return new (t || CommentComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  CommentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CommentComponent,\n    selectors: [[\"comment-cmp\"]],\n    decls: 13,\n    vars: 4,\n    consts: [[1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [\"ngbDropdown\", \"\", 1, \"d-inline-block\"], [\"id\", \"dropdownRecipe\", \"ngbDropdownToggle\", \"\", 1, \"btn\", \"btn-outline-primary\"], [\"ngbDropdownMenu\", \"\", \"aria-labelledby\", \"dropdownRecipe\"], [\"class\", \"dropdown-item\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"card-body\", 4, \"ngIf\"], [\"class\", \"mt-3 text-danger\", 4, \"ngIf\"], [1, \"dropdown-item\", 3, \"click\"], [1, \"card-body\"], [1, \"table-responsive\"], [1, \"table\"], [1, \"table-info\"], [4, \"ngFor\", \"ngForOf\"], [1, \"typography-line\"], [\"class\", \"text-warning\", 4, \"ngIf\"], [1, \"btn\", \"btn-danger\", \"btn-fab\", \"btn-icon\", \"btn-round\", 3, \"click\"], [1, \"nc-icon\", \"nc-simple-remove\"], [1, \"text-warning\"], [1, \"mt-3\", \"text-danger\"]],\n    template: function CommentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h4\", 4);\n        i0.ɵɵtext(5, \" View Comments \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"button\", 6);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵtemplate(10, CommentComponent_button_10_Template, 2, 1, \"button\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(11, CommentComponent_div_11_Template, 17, 2, \"div\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(12, CommentComponent_p_12_Template, 2, 0, \"p\", 10);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\" \", ctx.selectedRecipeName || \"Select Recipe\", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.recipes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.comments.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.comments.length === 0 && ctx.selectedRecipeId);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.NgbDropdown, i4.NgbDropdownToggle, i4.NgbDropdownMenu],\n    encapsulation: 2\n  });\n  return CommentComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}