{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction CollectionComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function CollectionComponent_tr_22_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const collection_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.deleteCategory(collection_r2.id));\n    });\n    i0.ɵɵelement(11, \"i\", 13);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const collection_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(collection_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(collection_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(collection_r2.createdAt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(collection_r2.updatedAt);\n  }\n}\n\nfunction CollectionComponent_p_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 14);\n    i0.ɵɵtext(1, \"No collections available.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let CollectionComponent = /*#__PURE__*/(() => {\n  class CollectionComponent {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.collections = [];\n      this.collectionName = ''; // Store the collection name to update\n\n      this.selectedCollectionId = null; // Store the selected collection ID\n    }\n\n    ngOnInit() {\n      this.getCollections();\n    }\n\n    getCollections() {\n      const token = sessionStorage.getItem('authToken'); // Retrieve token from sessionStorage\n\n      if (!token) {\n        this.router.navigate(['/login']);\n        console.error(\"No token found!\");\n        return;\n      }\n\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      this.http.post('http://localhost:8000/recipe-sharing-platform/api/get-collection', {}, {\n        headers\n      }).subscribe(response => {\n        if (response.success) {\n          this.collections = response.result; // Store API result in collections array\n        } else {\n          console.error(\"API returned an error:\", response.message);\n        }\n      }, error => {\n        console.error(\"Error fetching collections:\", error);\n      });\n    } //Delete Collection API call\n\n\n    deleteCategory(collectionId) {\n      const token = sessionStorage.getItem('authToken');\n\n      if (!token) {\n        this.router.navigate(['/login']);\n        console.error(\"No token found!\");\n        return;\n      }\n\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      console.log(token);\n      this.http.post(`http://localhost:8000/recipe-sharing-platform/api/delete-collection/${collectionId}`, {}, {\n        headers\n      }).subscribe(response => {\n        if (response.success) {\n          console.log('Collection deleted successfully');\n          this.getCollections(); // Refresh the list after deletion\n        } else {\n          console.error('Error deleting collection:', response.message);\n        }\n      }, error => {\n        console.error('Error deleting collection:', error);\n      });\n    }\n\n  }\n\n  CollectionComponent.ɵfac = function CollectionComponent_Factory(t) {\n    return new (t || CollectionComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  CollectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CollectionComponent,\n    selectors: [[\"collection-cmp\"]],\n    decls: 25,\n    vars: 2,\n    consts: [[1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [1, \"table-responsive\"], [1, \"table\"], [1, \"text-primary\"], [4, \"ngFor\", \"ngForOf\"], [1, \"typography-line\"], [\"class\", \"text-warning\", 4, \"ngIf\"], [1, \"btn\", \"btn-danger\", \"btn-fab\", \"btn-icon\", \"btn-round\", 3, \"click\"], [1, \"nc-icon\", \"nc-simple-remove\"], [1, \"text-warning\"]],\n    template: function CollectionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h4\", 4);\n        i0.ɵɵtext(5, \" View Collection \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"table\", 7)(9, \"thead\", 8)(10, \"tr\")(11, \"th\");\n        i0.ɵɵtext(12, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\");\n        i0.ɵɵtext(16, \"Created At\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18, \"Updated At\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\");\n        i0.ɵɵtext(20, \"Actions \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"tbody\");\n        i0.ɵɵtemplate(22, CollectionComponent_tr_22_Template, 12, 4, \"tr\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 10);\n        i0.ɵɵtemplate(24, CollectionComponent_p_24_Template, 2, 0, \"p\", 11);\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"ngForOf\", ctx.collections);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.collections.length === 0);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf],\n    encapsulation: 2\n  });\n  return CollectionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}